/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import model.Produto;
import model.Categoria;
import javax.swing.JOptionPane;
import dao.CategoriaDao;
import dao.MovimentacaoDao;
import model.Movimentacao;
import dao.ProdutoDao;
import java.time.LocalDate;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;

/**
 *
 * @author vinif
 */
public class FrmMovimentacaoEstoque extends javax.swing.JFrame {
    
    private Produto objetoproduto;
    private Movimentacao objetomovimentacao;
    /**
     * Creates new form FrmEntradas
     */
    
    private void carregarProdutos() {
        ProdutoDao produtoDao = new ProdutoDao();
        
        ArrayList<Produto> listaDeProduto = produtoDao.getListaDeProduto();
        jCBProduto.removeAllItems();
        
        for (Produto cat : listaDeProduto) {
        jCBProduto.addItem(cat);
    }
    }
    public FrmMovimentacaoEstoque() {
        initComponents();
        this.objetomovimentacao = new Movimentacao();
        carregarProdutos();
    }
    
     public class Mensagem extends Exception {
        public Mensagem (String mensagem) {
           super(mensagem); 
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        JLMovimentacaoEstoque = new javax.swing.JLabel();
        jCBProduto = new javax.swing.JComboBox<>();
        JLProduto = new javax.swing.JLabel();
        JTQuantidade = new javax.swing.JTextField();
        JLQuantidade = new javax.swing.JLabel();
        JCConfirmar = new javax.swing.JButton();
        JLTipo = new javax.swing.JLabel();
        JRSaida = new javax.swing.JRadioButton();
        JREntrada = new javax.swing.JRadioButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Movimentação Estoque");

        JLMovimentacaoEstoque.setText("Movimentação do Estoque ");

        DefaultComboBoxModel<Produto> modeloProduto = new DefaultComboBoxModel<>();
        jCBProduto.setModel(modeloProduto);

        JLProduto.setText("Produto: ");

        JTQuantidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JTQuantidadeActionPerformed(evt);
            }
        });

        JLQuantidade.setText("Quantidade:");

        JCConfirmar.setText("Confirmar");
        JCConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JCConfirmarActionPerformed(evt);
            }
        });

        JLTipo.setText("Tipo:");

        JRSaida.setText("Saída");

        JREntrada.setText("Entrada");

        jButton1.setText("Cancelar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(115, 115, 115)
                        .addComponent(JLMovimentacaoEstoque))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(JLQuantidade)
                            .addComponent(JLTipo)
                            .addComponent(JLProduto))
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(JRSaida)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(JREntrada))
                            .addComponent(jCBProduto, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(JTQuantidade))))
                .addContainerGap(146, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(JCConfirmar)
                .addGap(69, 69, 69))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(JLMovimentacaoEstoque)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCBProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JLProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JLTipo)
                    .addComponent(JRSaida)
                    .addComponent(JREntrada))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JLQuantidade)
                    .addComponent(JTQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JCConfirmar)
                    .addComponent(jButton1))
                .addContainerGap(46, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void JCConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JCConfirmarActionPerformed
        // TODO add your handling code here:
        try{
            // Recebendo a validandodados da interface
            

            Produto produto = (Produto) this.jCBProduto.getSelectedItem();
            if (produto == null) {
                throw new Mensagem("Produto deve ser selecionado");
            }
            
            int quantidade = Integer.parseInt(JTQuantidade.getText());
            if (quantidade <=0) {
                throw new Mensagem("A quantidade deve ser maior que zero.");
            }
            
            int quantidadeAtual = produto.getQuantidadeEmEstoque();
            String tipoMovimentacao = JREntrada.isSelected() ? "Entrada" : JRSaida.isSelected() ? "Saída" : "";
            int novaQuantidade;
            LocalDate dataMovimentacao = LocalDate.now();
            
            if (tipoMovimentacao.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Selecione o tipo de movimentação.");
                return;
            }           
            
            if (tipoMovimentacao.equals("Entrada")) {
                novaQuantidade = quantidadeAtual + quantidade;
            } else if (tipoMovimentacao.equals("Saída")) {
                if (quantidade > quantidadeAtual) {
                    throw new Mensagem("Quantidade insuficiente em estoque.");
                }
                novaQuantidade = quantidadeAtual - quantidade;
            } else {
                throw new Mensagem("Tipo de movimentação inválido.");
            }
            
            MovimentacaoDao movimentacaoDao = new MovimentacaoDao();
            if(this.objetomovimentacao.insertMovimentacaoDB(tipoMovimentacao, quantidade ,dataMovimentacao, produto)) {
                produto.setQuantidadeEmEstoque(novaQuantidade);
                ProdutoDao produtoDao = new ProdutoDao();
                produtoDao.atualizarQuantidadeEstoque(produto);
                
                JOptionPane.showMessageDialog(null, "Alteração feita com sucesso");      
            }
      
            System.out.println(this.objetoproduto.getListaDeProduto().toString());
            
            
        } catch (Mensagem erro) {
            JOptionPane.showMessageDialog(null, erro.getMessage());
        } catch (NumberFormatException erro2) {
            JOptionPane.showMessageDialog(null, "Informe um número válido");
        }
    }//GEN-LAST:event_JCConfirmarActionPerformed

    private void JTQuantidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JTQuantidadeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JTQuantidadeActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmMovimentacaoEstoque.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmMovimentacaoEstoque.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmMovimentacaoEstoque.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmMovimentacaoEstoque.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmMovimentacaoEstoque().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton JCConfirmar;
    private javax.swing.JLabel JLMovimentacaoEstoque;
    private javax.swing.JLabel JLProduto;
    private javax.swing.JLabel JLQuantidade;
    private javax.swing.JLabel JLTipo;
    private javax.swing.JRadioButton JREntrada;
    private javax.swing.JRadioButton JRSaida;
    private javax.swing.JTextField JTQuantidade;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<Produto> jCBProduto;
    // End of variables declaration//GEN-END:variables
}
