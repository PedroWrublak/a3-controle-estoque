/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import model.Produto;
import model.Categoria;
import javax.swing.JOptionPane;
import dao.CategoriaDao;
import dao.MovimentacaoDao;
import model.Movimentacao;
import dao.ProdutoDao;
import java.time.LocalDate;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;

/**
 *
 * @author Pedro
 */
public class FrmAlterarProduto extends javax.swing.JFrame {
    
     private Produto objetoproduto;
    /**
     * Creates new form FrmEntradas
     */
    
    private void carregarProdutos() {
        ProdutoDao produtoDao = new ProdutoDao();
        
        ArrayList<Produto> listaDeProduto = produtoDao.getListaDeProduto();
        jCBProduto.removeAllItems();
        
        for (Produto cat : listaDeProduto) {
        jCBProduto.addItem(cat);
    }
    }
    
    private void carregarCategorias() {
        CategoriaDao categoriaDao = new CategoriaDao();
        
        ArrayList<Categoria> listaDeCategoria = categoriaDao.getListaDeCategoria();
        jCBCategoria.removeAllItems();
        
        for (Categoria cat : listaDeCategoria) {
        jCBCategoria.addItem(cat);
    }
    }
    
    public FrmAlterarProduto() {
        initComponents();
        carregarProdutos();
        carregarCategorias();
    }
   
    
    public class Mensagem extends Exception {
        public Mensagem (String mensagem) {
           super(mensagem); 
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jCBProduto = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jCBCategoria = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jTFPrecoUnitario = new javax.swing.JTextField();
        jTFUnidadeMedida = new javax.swing.JTextField();
        jTFEstoque = new javax.swing.JTextField();
        jTFEstoqueMin = new javax.swing.JTextField();
        jTFEstoqueMax = new javax.swing.JTextField();
        jBCancelar = new javax.swing.JButton();
        jBAtualizar = new javax.swing.JButton();
        jBDeletar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Alterar Produto");

        jLabel2.setText("Produto");

        DefaultComboBoxModel<Produto> modeloProduto = new DefaultComboBoxModel<>();
        jCBProduto.setModel(modeloProduto);
        jCBProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBProdutoActionPerformed(evt);
            }
        });

        jLabel3.setText("Preço Unitário");

        jLabel4.setText("Unidade de Medida");

        jLabel5.setText("Categoria");

        DefaultComboBoxModel<Categoria> modeloCategoria = new DefaultComboBoxModel<>();
        jCBCategoria.setModel(modeloCategoria);

        jLabel6.setText("Quantidade em Estoque");

        jLabel7.setText("Quantidade Mínima");

        jLabel8.setText("Quantidade Máxima");

        jTFEstoque.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFEstoqueActionPerformed(evt);
            }
        });

        jBCancelar.setText("Cancelar");
        jBCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCancelarActionPerformed(evt);
            }
        });

        jBAtualizar.setText("Atualizar");
        jBAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAtualizarActionPerformed(evt);
            }
        });

        jBDeletar.setText("Deletar");
        jBDeletar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBDeletarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(173, 173, 173)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel8)
                                .addComponent(jLabel7)
                                .addComponent(jLabel6)
                                .addComponent(jCBProduto, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel3)
                                .addComponent(jLabel2)
                                .addComponent(jLabel4)
                                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jCBCategoria, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jTFPrecoUnitario)
                                .addComponent(jTFUnidadeMedida)
                                .addComponent(jTFEstoque)
                                .addComponent(jTFEstoqueMin)
                                .addComponent(jTFEstoqueMax, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jBCancelar)
                                .addGap(58, 58, 58)
                                .addComponent(jBDeletar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 75, Short.MAX_VALUE)
                                .addComponent(jBAtualizar)))))
                .addGap(52, 52, 52))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCBProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCBCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTFPrecoUnitario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTFUnidadeMedida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTFEstoque, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTFEstoqueMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTFEstoqueMax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBCancelar)
                    .addComponent(jBAtualizar)
                    .addComponent(jBDeletar))
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCancelarActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jBCancelarActionPerformed

    private void jTFEstoqueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFEstoqueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTFEstoqueActionPerformed

    private void jCBProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBProdutoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCBProdutoActionPerformed

    private void jBAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAtualizarActionPerformed
        // TODO add your handling code here:
        try{
            // Recebendo a validandodados da interface
            

            Produto produtoSelecionado = (Produto) this.jCBProduto.getSelectedItem();
            if (produtoSelecionado == null) {
                throw new Mensagem("Selecione um produto.");
            }
            
            Categoria categoriaSelecionada = (Categoria) this.jCBCategoria.getSelectedItem();
            if (categoriaSelecionada != null) {
                produtoSelecionado.setCategoria(categoriaSelecionada);
            }
            
            if (!jTFPrecoUnitario.getText().isEmpty()) {
                double precoUnitario = Double.parseDouble(jTFPrecoUnitario.getText());
                produtoSelecionado.setPrecoUnitario(precoUnitario);
            }

            if (!jTFUnidadeMedida.getText().isEmpty()) {
                String unidadeMedida = jTFUnidadeMedida.getText();
                produtoSelecionado.setUnidadeMedida(unidadeMedida);
            }

            if (!jTFEstoque.getText().isEmpty()) {
                int quantidadeEstoque = Integer.parseInt(jTFEstoque.getText());
                produtoSelecionado.setQuantidadeEmEstoque(quantidadeEstoque);
            }

            if (!jTFEstoqueMin.getText().isEmpty()) {
                int estoqueMinimo = Integer.parseInt(jTFEstoqueMin.getText());
                produtoSelecionado.setQuantidadeMinimaEmEstoque(estoqueMinimo);
            }

            if (!jTFEstoqueMax.getText().isEmpty()) {
                int estoqueMaximo = Integer.parseInt(jTFEstoqueMax.getText());
                produtoSelecionado.setQuantidadeMaximaEmEstoque(estoqueMaximo);
            }
            
            ProdutoDao produtoDao = new ProdutoDao();
            boolean sucesso = produtoDao.alterarProdutoDB(produtoSelecionado);
            
            if (sucesso) {
                JOptionPane.showMessageDialog(null, "Produto alterado com sucesso.");
            } else {
                JOptionPane.showMessageDialog(null, "Erro ao alterar produto.");
            }

            
        } catch (Mensagem erro) {
        JOptionPane.showMessageDialog(this, erro.getMessage());
        } catch (NumberFormatException erro2) {
        JOptionPane.showMessageDialog(this, "Informe valores numéricos válidos.");
        }
    }//GEN-LAST:event_jBAtualizarActionPerformed

    private void jBDeletarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBDeletarActionPerformed
        // TODO add your handling code here:
        Produto produtoSelecionado = (Produto) this.jCBProduto.getSelectedItem();
        if (produtoSelecionado == null) {
        JOptionPane.showMessageDialog(null, "Selecione um produto para deletar.");
            return;
        }
        
        int confirmacao = JOptionPane.showConfirmDialog(
            this,
            "Tem certeza que deseja excluir o produto \"" + produtoSelecionado.getNome() + "\"?",
            "Confirmação",
            JOptionPane.YES_NO_OPTION
        );
        
        if (confirmacao == JOptionPane.YES_OPTION) {
            ProdutoDao produtoDao = new ProdutoDao();
            boolean sucesso = produtoDao.deletarProdutoDB(produtoSelecionado.getId());

            if (sucesso) {
                JOptionPane.showMessageDialog(this, "Produto excluído com sucesso.");
                carregarProdutos();
            } else {
                JOptionPane.showMessageDialog(this, "Erro ao excluir o produto.");
            }
        }
    }//GEN-LAST:event_jBDeletarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmAlterarProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmAlterarProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmAlterarProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmAlterarProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmAlterarProduto().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBAtualizar;
    private javax.swing.JButton jBCancelar;
    private javax.swing.JButton jBDeletar;
    private javax.swing.JComboBox<Categoria> jCBCategoria;
    private javax.swing.JComboBox<Produto> jCBProduto;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JTextField jTFEstoque;
    private javax.swing.JTextField jTFEstoqueMax;
    private javax.swing.JTextField jTFEstoqueMin;
    private javax.swing.JTextField jTFPrecoUnitario;
    private javax.swing.JTextField jTFUnidadeMedida;
    // End of variables declaration//GEN-END:variables
}
